name: Infrastructure Terraform Specific Region

on:
  workflow_call:
    inputs:
      region-code:
        required: true
        type: string
        default: us-east-1
      country:
        required: true
        type: string
      state:
        required: true
        type: string
      locality:
        required: true
        type: string
      organization:
        required: true
        type: string
      common_name:
        required: true
        type: string
      environment:
        required: true
        type: string
        default: prod
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      TELEGRAM_TOKEN:
        required: true

jobs:
  Terraform:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      OUTPUTS_ARTIFACT_NAME: ${{ inputs.region-code }}-${{ inputs.environment }}-tf-outputs.json
    defaults:
      run:
        working-directory: ./tf_infra
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.2

      - name: Terraform init
        run: terraform init

      - name: Terraform workspace select
        run: terraform workspace select ${{ inputs.region-code }} || terraform workspace new ${{ inputs.region-code }}

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        run: |
          terraform plan \
            -var-file=region.${{ inputs.region-code }}.tfvars \
            -var "env=${{ inputs.environment }}" \
            -var "region=${{ inputs.region-code }}" \
            -var "telegram_token_value=${{ secrets.TELEGRAM_TOKEN }}" \
            -var "country=${{ inputs.country }}" \
            -var "state=${{ inputs.state }}" \
            -var "locality=${{ inputs.locality }}" \
            -var "organization=${{ inputs.organization }}" \
            -var "common_name=${{ inputs.common_name }}" \
            -out region.${{ inputs.region-code }}.tfplan

      - name: Terraform apply
        run: |
          terraform apply -auto-approve region.${{ inputs.region-code }}.tfplan

      - name: Get Terraform Output
        id: output
        run: |
          echo "PEM_FILE_PATH=$(terraform output -raw pem_file_path)" >> $GITHUB_ENV
          echo "PUB_FILE_PATH=$(terraform output -raw pub_file_path)" >> $GITHUB_ENV
          echo "FILE_NAME=$(terraform output -raw key_pair_name)" >> $GITHUB_ENV
          terraform output -json > ${{ github.workspace }}/${{ env.OUTPUTS_ARTIFACT_NAME }}

      - name: Upload Private Key as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "${{ inputs.region-code }}-${{ inputs.environment }}-${{ env.FILE_NAME }}.pem"
          path: "${{ env.PEM_FILE_PATH }}"
          retention-days: 5

      - name: Upload Public Key as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "${{ inputs.region-code }}-${{ inputs.environment }}-${{ env.FILE_NAME }}.pub"
          path: "${{ env.PUB_FILE_PATH }}"
          retention-days: 5

      - name: Upload Terraform Outputs as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.OUTPUTS_ARTIFACT_NAME }}"
          path: "${{ github.workspace }}/${{ env.OUTPUTS_ARTIFACT_NAME }}"
          retention-days: 5
